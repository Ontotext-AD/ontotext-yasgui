Subject: [PATCH] GDB-9476: Some queries with empty results squish the cells
---
Index: Yasgui/packages/yasr/src/plugins/table/index.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasr/src/plugins/table/index.scss b/Yasgui/packages/yasr/src/plugins/table/index.scss
--- a/Yasgui/packages/yasr/src/plugins/table/index.scss	(revision f0e81973a5f963020820ae86868951cedcd1933d)
+++ b/Yasgui/packages/yasr/src/plugins/table/index.scss	(revision 038d71ee85d3888ca51661e3d99f1f46f4f603f1)
@@ -65,7 +65,7 @@
     }
     .dataTable {
       &:not(.withRowNumber) {
-        tr td:first-child,
+        tr td:first-child:not(.dataTables_empty),
         tr th:first-child {
           display: none;
         }
Index: Yasgui/packages/yasr/src/plugins/table/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasr/src/plugins/table/index.ts b/Yasgui/packages/yasr/src/plugins/table/index.ts
--- a/Yasgui/packages/yasr/src/plugins/table/index.ts	(revision f0e81973a5f963020820ae86868951cedcd1933d)
+++ b/Yasgui/packages/yasr/src/plugins/table/index.ts	(revision 038d71ee85d3888ca51661e3d99f1f46f4f603f1)
@@ -224,6 +224,7 @@
       // Our cells are calculated dynamically, and with this configuration on, rendering the datatable results becomes very slow.
       autoWidth: false,
       language: {
+        zeroRecords: this.translationService.translate("yasr.plugin_control.table.empty_result.label"),
         info: this.translationService.translate("yasr.plugin.table.data_tables.info.result_info"),
         paginate: {
           first: this.translationService.translate("yasr.plugin.table.data_tables.paginate.first"),
@@ -297,9 +298,32 @@
       addClass(this.tableEl, "ellipseTable");
       this.setEllipsisHandlers();
     }
+
+    if (!rows || rows.length < 1) {
+      this.updateEmptyTable(this.persistentConfig);
+    }
+
     // if (this.tableEl.clientWidth > width) this.tableEl.parentElement?.style.setProperty("overflow", "hidden");
   }
 
+  protected updateEmptyTable(persistentConfig: PersistentConfig): void {
+    const element: HTMLTableCellElement | null | undefined = this.tableEl?.querySelector("td.dataTables_empty");
+    if (element) {
+      const columns = this.dataTable?.columns().count();
+      const columnCount = columns || 0;
+      element.colSpan = persistentConfig.compact ? columnCount - 1 : columnCount;
+    }
+    if (this.tableFilterField) {
+      this.tableFilterField.disabled = true;
+    }
+    if (this.tableCompactSwitch) {
+      this.tableCompactSwitch.disabled = true;
+    }
+    if (this.tableEllipseSwitch) {
+      this.tableEllipseSwitch.disabled = true;
+    }
+  }
+
   private setEllipsisHandlers = () => {
     this.dataTable?.cells({ page: "current" }).every((rowIdx, colIdx) => {
       const cell = this.dataTable?.cell(rowIdx, colIdx);
