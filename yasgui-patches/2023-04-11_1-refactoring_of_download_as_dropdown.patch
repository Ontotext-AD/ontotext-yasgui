Subject: [PATCH] ## What Refactoring of "Download as" dropdown
---
Index: Yasgui/packages/yasgui/src/Tab.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasgui/src/Tab.ts b/Yasgui/packages/yasgui/src/Tab.ts
--- a/Yasgui/packages/yasgui/src/Tab.ts	(revision 46403f35118fe613cdeca1727e4131b0148a4301)
+++ b/Yasgui/packages/yasgui/src/Tab.ts	(revision b8b05640f7745f5ce69c541f4efdeccce0c8090d)
@@ -563,7 +563,6 @@
       },
       defaultPlugin: this.persistentJson.yasr.settings.selectedPlugin,
       pluginOrder: this.yasgui.config.yasr.pluginOrder,
-      downloadAsOn: this.yasgui.config.yasr.downloadAsOn,
       getPlainQueryLinkToEndpoint: () => {
         if (this.yasqe) {
           return shareLink.appendArgsToUrl(
Index: Yasgui/packages/yasr/src/extended-yasr.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasr/src/extended-yasr.ts b/Yasgui/packages/yasr/src/extended-yasr.ts
--- a/Yasgui/packages/yasr/src/extended-yasr.ts	(revision 46403f35118fe613cdeca1727e4131b0148a4301)
+++ b/Yasgui/packages/yasr/src/extended-yasr.ts	(revision b8b05640f7745f5ce69c541f4efdeccce0c8090d)
@@ -1,5 +1,5 @@
 import Yasr, { Config } from "@triply/yasr";
-import { addClass, removeClass, TranslationService } from "@triply/yasgui-utils";
+import { addClass, removeClass } from "@triply/yasgui-utils";
 import Yasqe from "@triply/yasqe";
 
 export class ExtendedYasr extends Yasr {
@@ -11,8 +11,7 @@
   static readonly ONE_DAY_IN_MILLISECONDS = 86400000;
   static readonly ONE_MINUTE_IN_MILLISECONDS = 60000;
 
-  downloadAsElement: HTMLElement | undefined;
-
+  // TODO remove it
   externalPluginsConfigurations: Map<string, any> | undefined;
   resultQueryPaginationElement: Page | undefined;
 
@@ -51,7 +50,7 @@
       });
     }
 
-    if (!this.yasqe.config.paginationOn && !this.config.downloadAsOn && !this.yasrToolbarManagers) {
+    if (!this.yasqe.config.paginationOn && !this.yasrToolbarManagers) {
       return;
     }
     const pluginSelectorsEl = this.getPluginSelectorsEl();
@@ -59,14 +58,6 @@
     spacerElement.classList.add("spacer");
     pluginSelectorsEl.appendChild(spacerElement);
 
-    if (this.config.downloadAsOn) {
-      const downloadAsLiElement = document.createElement("li");
-      this.downloadAsElement = this.createDownloadAsElement();
-      this.updateDownloadAsElementVisibility();
-      pluginSelectorsEl.appendChild(downloadAsLiElement);
-      downloadAsLiElement.appendChild(this.downloadAsElement);
-    }
-
     if (this.yasrToolbarManagers) {
       const yasrToolbar = document.createElement("li");
       yasrToolbar.className = "yasr-toolbar";
@@ -97,10 +88,6 @@
 
   updatePluginSelectorNames() {
     super.updatePluginSelectorNames();
-    if (this.downloadAsElement) {
-      this.updateDownloadAsElement(this.toDownloadAs(this.downloadAsElement));
-      this.updateDownloadAsElementVisibility();
-    }
     this.yasrToolbarManagers?.forEach((manager) => manager.updateElement(this));
   }
 
@@ -176,69 +163,6 @@
     return this.eventsListeners;
   }
 
-  // Private functions
-  private toDownloadAs(element: HTMLElement | undefined): DownloadAs | undefined {
-    return element ? ((element as any) as DownloadAs) : undefined;
-  }
-
-  private createDownloadAsElement(): HTMLElement {
-    const element = document.createElement("ontotext-download-as");
-    const downloadAsComponent = this.toDownloadAs(element);
-    if (downloadAsComponent) {
-      downloadAsComponent.translationService = this.translationService;
-    }
-    this.updateDownloadAsElement(downloadAsComponent);
-    return element;
-  }
-
-  private updateDownloadAsElement(element: DownloadAs | undefined) {
-    if (!element) {
-      return;
-    }
-    element.query = this.yasqe?.getValueWithoutComments();
-    element.pluginName = this.getSelectedPluginName();
-
-    const infer = this.yasqe?.getInfer();
-    if (infer !== undefined) {
-      element.infer = infer;
-    }
-    const sameAs = this.yasqe?.getSameAs();
-    if (sameAs !== undefined) {
-      element.sameAs = sameAs;
-    }
-    const downloadAsConfiguration = this.getDownloadAsConfiguration();
-    if (downloadAsConfiguration) {
-      element.items = downloadAsConfiguration.items ? [...downloadAsConfiguration.items] : [];
-      if (downloadAsConfiguration.hasOwnProperty("nameLabelKey")) {
-        element.nameLabelKey = downloadAsConfiguration.nameLabelKey;
-      }
-      element.tooltipLabelKey = downloadAsConfiguration.tooltipLabelKey || downloadAsConfiguration.nameLabelKey;
-    } else {
-      element.items = [];
-    }
-  }
-
-  private getDownloadAsConfiguration() {
-    return this.externalPluginsConfigurations
-      ? this.externalPluginsConfigurations.get(this.getSelectedPluginName())?.["downloadAsConfig"]
-      : undefined;
-  }
-
-  private updateDownloadAsElementVisibility() {
-    addClass(this.downloadAsElement, "hidden");
-
-    // Download as dropdown is not visible
-    // when executed query is for explain plan query,
-    if (this.yasqe.getIsExplainPlanQuery()) {
-      return;
-    }
-    // or there is no results.
-    if (!this.results?.getBindings()?.length) {
-      return;
-    }
-    removeClass(this.downloadAsElement, "hidden");
-  }
-
   private hasMoreThanOnePageElements(resultQueryPaginationElement: Page): boolean {
     if (resultQueryPaginationElement.pageNumber && resultQueryPaginationElement.pageNumber > 1) {
       return true;
@@ -528,17 +452,6 @@
   }
 }
 
-interface DownloadAs {
-  translationService: TranslationService;
-  nameLabelKey: string;
-  tooltipLabelKey: string;
-  query: string | undefined;
-  pluginName: string;
-  items: any[];
-  infer?: boolean;
-  sameAs?: boolean;
-}
-
 interface Page extends HTMLElement {
   pageSize?: number;
   pageNumber?: number;
Index: Yasgui/packages/yasr/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasr/src/index.ts b/Yasgui/packages/yasr/src/index.ts
--- a/Yasgui/packages/yasr/src/index.ts	(revision 46403f35118fe613cdeca1727e4131b0148a4301)
+++ b/Yasgui/packages/yasr/src/index.ts	(revision b8b05640f7745f5ce69c541f4efdeccce0c8090d)
@@ -674,7 +674,6 @@
   externalPluginsConfigurations?: Map<string, any>;
   yasrToolbarPlugins?: YasrToolbarPlugin[];
   downloadAsOptions?: { labelKey: string; value: any }[];
-  downloadAsOn?: boolean;
   /**
    * Custom renderers for errors.
    * Allow multiple to be able to add new custom renderers without having to
Index: Yasgui/packages/yasr/src/main.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasr/src/main.scss b/Yasgui/packages/yasr/src/main.scss
--- a/Yasgui/packages/yasr/src/main.scss	(revision 46403f35118fe613cdeca1727e4131b0148a4301)
+++ b/Yasgui/packages/yasr/src/main.scss	(revision b8b05640f7745f5ce69c541f4efdeccce0c8090d)
@@ -161,5 +161,9 @@
 
   .yasr-toolbar {
     display: flex;
+    .yasr-toolbar-element {
+      padding-left: 10px;
+      padding-right: 10px;
+    }
   }
 }
