Index: Yasgui/packages/yasgui/src/Tab.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasgui/src/Tab.ts b/Yasgui/packages/yasgui/src/Tab.ts
--- a/Yasgui/packages/yasgui/src/Tab.ts	(revision 3642ad77a7dfa2690ca3d86a433c8a69695da828)
+++ b/Yasgui/packages/yasgui/src/Tab.ts	(revision 656d9a3ff3fbdbf8dfc25ff82005c31f2c49a4c2)
@@ -46,6 +46,7 @@
   emit(event: "autocompletionShown", tab: Tab, widget: any): boolean;
   on(event: "autocompletionClose", listener: (tab: Tab) => void): this;
   emit(event: "autocompletionClose", tab: Tab): boolean;
+  emit(event: "yasqeReady", tab: Tab, yasqe: Yasqe | undefined): boolean;
 }
 export class Tab extends EventEmitter {
   private persistentJson: PersistedJson;
@@ -105,6 +106,7 @@
     this.rootEl.appendChild(wrapper);
     this.initControlbar();
     this.initYasqe();
+    this.emit("yasqeReady", this, this.getYasqe());
     this.initYasr();
     this.yasgui._setPanel(this.persistentJson.id, this.rootEl);
   }
Index: Yasgui/packages/yasgui/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasgui/src/index.ts b/Yasgui/packages/yasgui/src/index.ts
--- a/Yasgui/packages/yasgui/src/index.ts	(revision 3642ad77a7dfa2690ca3d86a433c8a69695da828)
+++ b/Yasgui/packages/yasgui/src/index.ts	(revision 656d9a3ff3fbdbf8dfc25ff82005c31f2c49a4c2)
@@ -82,6 +82,7 @@
   emit(event: "autocompletionShown", instance: Yasgui, tab: Tab, widget: any): boolean;
   on(event: "autocompletionClose", listener: (instance: Yasgui, tab: Tab) => void): this;
   emit(event: "autocompletionClose", instance: Yasgui, tab: Tab): boolean;
+  emit(event: "yasqeReady", tab: Tab, yasqe: Yasqe | undefined): boolean;
 }
 export class Yasgui extends EventEmitter {
   public rootEl: HTMLDivElement;
@@ -146,6 +147,7 @@
       const newTab = this.addTab(true);
       this.persistentConfig.setActive(newTab.getId());
       this.emit("tabChange", this, newTab);
+      this.emit("yasqeReady", newTab, newTab.getYasqe());
     } else {
       for (const tabId of tabs) {
         this._tabs[tabId] = new Tab(this, this.persistentConfig.getTab(tabId));
@@ -210,6 +212,7 @@
       this._tabs[tabId] = new Tab(this, Tab.getDefaults(this));
     }
     this._tabs[tabId].show();
+    this.emit("yasqeReady", this._tabs[tabId], this._tabs[tabId].getYasqe());
     for (const otherTabId in this._tabs) {
       if (otherTabId !== tabId) this._tabs[otherTabId].hide();
     }
@@ -277,7 +280,11 @@
   }
 
   private _registerTabListeners(tab: Tab) {
-    tab.on("change", (tab) => this.emit("tabChange", this, tab));
+    tab.on("change", (tab) => {
+        this.emit("tabChange", this, tab);
+        this.emit("yasqeReady", tab, tab.getYasqe());
+    });
+    tab.on("yasqeReady", (tab, yasqe) => this.emit("yasqeReady", tab, yasqe));
     tab.on("query", (tab) => this.emit("query", this, tab));
     tab.on("queryAbort", (tab) => this.emit("queryAbort", this, tab));
     tab.on("queryResponse", (tab) => this.emit("queryResponse", this, tab));
@@ -335,6 +342,7 @@
     if (setActive) {
       this.persistentConfig.setActive(tabId);
       this._tabs[tabId].show();
+      this.emit("yasqeReady", this._tabs[tabId], this._tabs[tabId].getYasqe());
     }
     return this._tabs[tabId];
   }
