Subject: [PATCH] Added event notification when a query is aborted.
---
Index: Yasgui/packages/utils/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/utils/src/index.ts b/Yasgui/packages/utils/src/index.ts
--- a/Yasgui/packages/utils/src/index.ts	(revision 6d74f0c3698b540171dec8850da770d1b504d6bc)
+++ b/Yasgui/packages/utils/src/index.ts	(revision 1280c7aabd0debf17ec024718841e03acd1ee975)
@@ -159,3 +159,8 @@
   EXPLAIN = "explain",
   CHAT_GPT_EXPLAIN = "gpt",
 }
+
+export interface OngoingRequestsInfo {
+  queriesCount: number;
+  updatesCount: number;
+}
Index: Yasgui/packages/yasgui/src/Tab.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasgui/src/Tab.ts b/Yasgui/packages/yasgui/src/Tab.ts
--- a/Yasgui/packages/yasgui/src/Tab.ts	(revision 6d74f0c3698b540171dec8850da770d1b504d6bc)
+++ b/Yasgui/packages/yasgui/src/Tab.ts	(revision 1280c7aabd0debf17ec024718841e03acd1ee975)
@@ -175,10 +175,20 @@
       delete this.yasgui._tabs[this.persistentJson.id];
     };
     if (confirm) {
+      let closeTabWarningMessage = "";
+      if (this.yasqe?.hasOngoingRequest()) {
+        if ("update" === this.yasqe?.getQueryMode().toLowerCase()) {
+          closeTabWarningMessage = this.yasgui.config.translationService.translate("yasgui.tab_list.close_tab.confirmation.not_query_update.message");
+        } else {
+          closeTabWarningMessage = this.yasgui.config.translationService.translate("yasgui.tab_list.close_tab.confirmation.query_non_updates.message");
+        }
+      } else {
+        closeTabWarningMessage = this.yasgui.config.translationService.translate("yasgui.tab_list.close_tab.confirmation.not_queries_non_updates.message");
+      }
       new CloseTabConfirmation(
         this.yasgui.config.translationService,
         this.yasgui.config.translationService.translate("yasgui.tab_list.close_tab.confirmation.title"),
-        this.yasgui.config.translationService.translate("yasgui.tab_list.close_tab.confirmation.message"),
+        closeTabWarningMessage,
         closeTab
       ).open();
     } else {
Index: Yasgui/packages/yasgui/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasgui/src/index.ts b/Yasgui/packages/yasgui/src/index.ts
--- a/Yasgui/packages/yasgui/src/index.ts	(revision 6d74f0c3698b540171dec8850da770d1b504d6bc)
+++ b/Yasgui/packages/yasgui/src/index.ts	(revision 1280c7aabd0debf17ec024718841e03acd1ee975)
@@ -13,8 +13,10 @@
   addClass,
   EventService,
   NotificationMessageService,
+  OngoingRequestsInfo,
   removeClass,
   TimeFormattingService,
+  TranslationParameter,
 } from "@triply/yasgui-utils";
 import { TranslationService } from "@triply/yasgui-utils";
 import { CloseTabConfirmation } from "./closeTabConfirmation";
@@ -292,10 +294,10 @@
     }
     return tab;
   }
-  public closeOtherTabs(currentTabId: string): void {
+  public closeOtherTabs(skipTabId: string): void {
     const closeOtherTabs = () => {
       for (const tabId of Object.keys(this._tabs)) {
-        if (tabId !== currentTabId) {
+        if (tabId !== skipTabId) {
           this.getTab(tabId)?.close(false);
         }
       }
@@ -303,10 +305,61 @@
     new CloseTabConfirmation(
       this.translationService,
       this.translationService.translate("yasgui.tab_list.close_tab.confirmation.title"),
-      this.translationService.translate("yasgui.tab_list.close_other_tabs.confirmation.message"),
+      this.getCloseTabsWarningMessage(this.getOngoingRequestsInfo(skipTabId)),
       closeOtherTabs
     ).open();
   }
+
+  private getCloseTabsWarningMessage(ongoingRequestsInfo: OngoingRequestsInfo): string {
+    let closeTabsWarningMessageLabelKey = "yasgui.tab_list.close_other_tabs.confirmation.";
+
+    if (!ongoingRequestsInfo || ongoingRequestsInfo.queriesCount < 1) {
+      closeTabsWarningMessageLabelKey += "none_queries_";
+    } else if (ongoingRequestsInfo.queriesCount === 1) {
+      closeTabsWarningMessageLabelKey += "one_query_";
+    } else {
+      closeTabsWarningMessageLabelKey += "queries_";
+    }
+
+    if (!ongoingRequestsInfo.updatesCount || ongoingRequestsInfo.updatesCount === 0) {
+      closeTabsWarningMessageLabelKey += "non_updates";
+    } else if (ongoingRequestsInfo.updatesCount === 1) {
+      closeTabsWarningMessageLabelKey += "one_update";
+    } else {
+      closeTabsWarningMessageLabelKey += "updates";
+    }
+
+    closeTabsWarningMessageLabelKey += ".message";
+    const params: TranslationParameter[] = [
+      {
+        key: "queriesCount",
+        value: `${ongoingRequestsInfo.queriesCount}`,
+      },
+      {
+        key: "updatesCount",
+        value: `${ongoingRequestsInfo.updatesCount}`,
+      },
+    ];
+    return this.translationService.translate(closeTabsWarningMessageLabelKey, params);
+  }
+  public getOngoingRequestsInfo(skipTabId?: string): OngoingRequestsInfo {
+    return Object.values(this._tabs).reduce(
+      (counts, tab) => {
+        if (!!skipTabId && skipTabId === tab.getId()) {
+          return counts;
+        }
+
+        const yasqe = tab.getYasqe();
+        if (yasqe && yasqe.hasOngoingRequest()) {
+          const queryMode = yasqe.getQueryMode();
+          counts[queryMode === "query" ? "queriesCount" : "updatesCount"] += 1;
+        }
+        return counts;
+      },
+      { queriesCount: 0, updatesCount: 0 }
+    );
+  }
+
   /**
    * Checks if two persistent tab configuration are the same based.
    * It isnt a strict equality, as falsy values (e.g. a header that isnt set in one tabjson) isnt taken into consideration
Index: Yasgui/packages/yasqe/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Yasgui/packages/yasqe/src/index.ts b/Yasgui/packages/yasqe/src/index.ts
--- a/Yasgui/packages/yasqe/src/index.ts	(revision 6d74f0c3698b540171dec8850da770d1b504d6bc)
+++ b/Yasgui/packages/yasqe/src/index.ts	(revision 1280c7aabd0debf17ec024718841e03acd1ee975)
@@ -1218,20 +1218,29 @@
   public abortQuery() {
     if (this.req) {
       this.req.abort();
+      this.eventService.emitEvent(this.rootEl, "internalRequestAbortedEvent", {
+        request: this.req,
+        queryMode: this.getQueryMode()?.toLowerCase(),
+      });
       this.emit("queryAbort", this, this.req);
       this.updateAbortQueryButton();
     }
 
-    this.abortCountQuery();
+    this.abortCountRequests();
   }
 
-  public abortCountQuery(): void {
+  public abortCountRequests(): void {
     if (this.countReq) {
       this.countReq.abort();
-      this.eventService.emitEvent(this.rootEl, "internalCountQueryAbortedEvent", { request: this.countReq });
+      this.eventService.emitEvent(this.rootEl, "internalRequestAbortedEvent", { request: this.countReq });
       this.emit("countQueryFinished");
     }
   }
+
+  public hasOngoingRequest(): boolean {
+    return !!this.req;
+  }
+
   public expandEditor() {
     this.setSize(null, "100%");
   }
