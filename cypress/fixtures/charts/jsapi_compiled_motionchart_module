function gvjs_T_(a) {
  gvjs_Qn.call(this, a);
  this.Sd = new gvjs_wi(this,this.container);
  this.Uu = "google.visualization.MotionChart-" + gvjs_qma++;
  gvjs_U_[this.Uu] = this;
  this.cU = this.Uu + "_swf";
  a.id || (a.id = this.Uu);
  this.Usa = gvjs_Dm()
}
gvjs_o(gvjs_T_, gvjs_Qn);
gvjs_ = gvjs_T_.prototype;
gvjs_.Rd = function(a, b, c) {
  a = c || {};
  this.Z = b;
  c = this.container;
  this.Sd.removeAll();
  if (b) {
    try {
      this.lM(b)
    } catch (e) {
      this.Sd.Sc(e.message);
      return
    }
    this.DN = !1;
    null == this.CL && (this.CL = gvjs_rma);
    var d = gvjs_Wz(a, 1);
    this.Ym || d != this.Pda ? (this.Ym = !1,
      this.Pda = d,
      this.a3(c, a),
      this.V0 = gvjs_sma(b)) : (b = gvjs_sma(b),
      b == this.V0 ? this.zf().dataChanged() : (this.zf().metricTablesChanged(),
        this.V0 = b))
  } else
    this.Sd.Sc("Data table is null")
}
;
function gvjs_sma(a) {
  for (var b = "", c = a.$(), d = 0; d < c; d++)
    b += a.W(d) + ":" + a.Ga(d) + ",";
  return b
}
gvjs_.zf = function() {
  return null != this.cU ? gvjs_Ph().getElementById(this.cU) : null
}
;
gvjs_.Mra = function(a) {
  if (null != this.CL)
    throw Error("Swf url already initialzed");
  this.CL = a
}
;
gvjs_.getState = function() {
  return this.DN ? gvjs_Hi(this.zf().getState()) : null
}
;
gvjs_.lM = function(a) {
  if (3 > a.$())
    throw Error("There should be at least three columns in the data.");
  var b;
  if (!(b = a.W(0) != gvjs_l)) {
    b = a.W(1);
    var c = !1
      , d = a.getValue(0, 1);
    switch (b) {
      case gvjs_g:
        c = 0 <= d && Math.floor(d) == d;
        break;
      case gvjs_l:
        c = /^[0-9]{4}Q[1-4]{1}$/.test(d) || /^[0-9]{4}W[0-9]{2}$/.test(d) || /^[0-9]{4}-((0[1-9])|(1[0-2]))$/.test(d);
        break;
      case gvjs_Lb:
      case gvjs_Mb:
        c = !0
    }
    b = !c
  }
  if (b)
    throw Error("First and second columns must be entity and time.");
  c = b = 0;
  d = a.$();
  for (var e = 2; e < d; e++) {
    if (a.W(e) != gvjs_g && a.W(e) != gvjs_l)
      throw Error("All data columns must be string or numbers.");
    a.W(e) == gvjs_g ? b++ : c++
  }
  if (1 > b)
    throw Error("There must be at least one numeric column.");
}
;
gvjs_.a3 = function(a, b) {
  var c = this.CL.replace("/en/", "/" + this.Usa + "/")
    , d = parseInt(b.width, 10) || 500
    , e = parseInt(b.height, 10) || 300
    , f = b.state;
  f = typeof f === gvjs_l ? f : "";
  var g = decodeURIComponent(f);
  f = (/^\s*$/.test(g) ? 0 : /^[\],:{}\s\u2028\u2029]*$/.test(g.replace(/\\["\\\/bfnrtu]/g, "@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g, "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""))) ? encodeURIComponent(f) : "";
  f = {
    state: f,
    chartId: this.Uu || "",
    js: "blocking"
  };
  g = {
    id: this.cU
  };
  gvjs_V_("showSelectList", "opt_.featureConfig_selectListComponent", b, f);
  gvjs_V_("showSidePanel", "opt_.featureConfig_sidePanel", b, f);
  gvjs_V_("showXMetricPicker", "opt_.featureConfig_xMetricPicker", b, f);
  gvjs_V_("showYMetricPicker", "opt_.featureConfig_yMetricPicker", b, f);
  gvjs_V_("showXScalePicker", "opt_.featureConfig_xScalePicker", b, f);
  gvjs_V_("showYScalePicker", "opt_.featureConfig_yScalePicker", b, f);
  gvjs_V_("showHeader", "opt_.featureConfig_chartHeader", b, f);
  gvjs_V_(gvjs_Tw, "opt_.featureConfig_chartButtons", b, f);
  gvjs_V_("showAdvancedPanel", "opt_.featureConfig_advancedPanel", b, f);
  gvjs_V_("showSliderTimeDisplay", "opt_.featureConfig_sliderTimeDisplay", b, f);
  gvjs_hh(a);
  b = gvjs_3g(a).createElement(gvjs_Ob);
  var h = a.id + "_flashElement";
  b.id = h;
  a.appendChild(b);
  new gvjs_EQ.J9(c,h,d,e,"9.0.0",!1,f,{
    scale: gvjs_eu,
    allowScriptAccess: "always",
    wmode: "opaque",
    bgcolor: gvjs_xr
  },g)
}
;
function gvjs_tma(a) {
  gvjs_W_(a);
  a = gvjs_U_[a];
  for (var b = [{
    name: a.Z.Ga(0),
    id: "dim0"
  }], c = [], d = a.Z.$(), e = 2; e < d; e++)
    c.push({
      id: e,
      name: a.Z.Ga(e),
      type: a.Z.W(e) == gvjs_g ? "continuous" : gvjs_ip,
      hasTime: !0
    });
  return gvjs_Hi({
    dimensions: b,
    metrics: c
  })
}
function gvjs_uma(a, b) {
  gvjs_W_(a);
  a = gvjs_U_[a];
  var c = a.Z.W(1)
    , d = []
    , e = []
    , f = [];
  f.push(d);
  f.push(e);
  for (var g = new gvjs_O(2,a.Z.$() - 1), h = 0; h < b.length; h++) {
    if (!gvjs_Bl(g, Number(b[h])))
      throw Error("Column index out of range: " + b[h]);
    f.push([])
  }
  g = a.Z.ca();
  for (var k = 0; k < g; k++) {
    h = (a.Z.Ha(k, 0) + "").replace(/[\\"']/g, "");
    d.push(h);
    h = e;
    var l = h.push;
    var m = a.Z.getValue(k, 1);
    var n = c;
    if (n == gvjs_g)
      m = String(m);
    else if (n == gvjs_l && (-1 < m.indexOf("Q") || -1 < m.indexOf("W") || 4 == m.indexOf("-")))
      m = String(m);
    else if (n == gvjs_Lb || n == gvjs_Mb) {
      n = [];
      n.push(String(m.getFullYear()));
      var p = String(m.getMonth() + 1);
      1 == p.length && (p = "0" + p);
      n.push(p);
      m = String(m.getDate());
      1 == m.length && (m = "0" + m);
      n.push(m);
      m = n.join("-")
    } else
      m = null;
    l.call(h, m);
    for (h = 0; h < b.length; h++)
      f[h + 2].push(a.Z.getValue(k, Number(b[h])))
  }
  return gvjs_Hi(f)
}
function gvjs_vma(a) {
  gvjs_W_(a);
  a = gvjs_U_[a];
  gvjs_I(a, gvjs_Hd, null);
  a.DN || (a.DN = !0,
    gvjs_I(a, gvjs_i, null))
}
function gvjs_W_(a) {
  if (null == gvjs_U_[a])
    throw Error("No chart with id " + a + " exists");
}
function gvjs_V_(a, b, c, d) {
  a = c[a];
  null != a && (d[b] = !!a)
}
var gvjs_X_ = gvjs_FQ("flash_subdir", gvjs_fd, "1");
gvjs_X_.Ch.subdir = "en";
gvjs_X_.Ch.filename = "tlz-gviz.swf";
var gvjs_rma = gvjs_ef(gvjs_DQ(gvjs_X_));
gvjs_T_.prototype.Uu = null;
gvjs_T_.prototype.cU = null;
gvjs_T_.prototype.CL = null;
var gvjs_qma = 0
  , gvjs_U_ = {};
gvjs_ = gvjs_T_.prototype;
gvjs_.Ym = !0;
gvjs_.Pda = -1;
gvjs_.DN = !1;
gvjs_.V0 = "";
gvjs_.Z = null;
gvjs_q(gvjs_Cc, gvjs_T_, void 0);
gvjs_T_.prototype.draw = gvjs_T_.prototype.draw;
gvjs_T_.prototype.getState = gvjs_T_.prototype.getState;
gvjs_T_.prototype.getChart = gvjs_T_.prototype.zf;
gvjs_T_.prototype.initSwfUrl = gvjs_T_.prototype.Mra;
gvjs_q("google.visualization.getMetadata", gvjs_tma, void 0);
gvjs_q("google.visualization.getMetricValues", gvjs_uma, void 0);
gvjs_q("google.visualization.updateExternalState", gvjs_vma, void 0);
gvjs_q("getMetadata", gvjs_tma, void 0);
gvjs_q("getMetricValues", gvjs_uma, void 0);
gvjs_q("updateExternalState", gvjs_vma, void 0);
